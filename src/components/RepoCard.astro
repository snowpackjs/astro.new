---
import { Image } from 'astro:assets';
import fallbackImage from '../assets/previews/minimal.webp';
import type { Example } from '../data/examples.js';
import CopyButton from './CopyButton.astro';
import ProjectLauncher from './ProjectLauncher.astro';
import RepoCardLink from './RepoCardLink.astro';

export type Props = Example & { aboveTheFold: boolean };

const {
	title,
	name,
	sourceUrl,
	idxUrl,
	stackblitzUrl,
	codesandboxUrl,
	gitpodUrl,
	previewEmbedUrl,
	createAstroTemplate,
	loadPreviewImage = () => fallbackImage,
	aboveTheFold,
} = Astro.props;

const image = await loadPreviewImage();
const headingId = `template-${createAstroTemplate}`;
---

<article
	class="relative bg-astro-gray-600 outline outline-1 -outline-offset-1 outline-astro-gray-100/10"
	aria-labelledby={headingId}
>
	<div class="noise z-0"></div>
	<div class="aspect-video bg-astro-gray-700">
		<Image
			transition:name={name}
			transition:animate="initial"
			src={image}
			alt=""
			loading={aboveTheFold ? 'eager' : 'lazy'}
			widths={[400, 600, 900]}
			sizes="(min-width 1280px) 390px,(min-width: 1024px) 33vw, (min-width: 640px) 50vw, 100vw"
			class="object-cover object-left-top outline outline-1 -outline-offset-1 outline-astro-gray-100/10 s-full"
		/>
	</div>
	<div class="flex flex-col gap-4 p-5">
		<h2 class="heading-4" id={headingId}>{title}</h2>
		<p class="flex flex-wrap gap-2">
			{
				previewEmbedUrl && (
					<RepoCardLink as="a" href={previewEmbedUrl} icon="eye" data-astro-prefetch>
						Preview
					</RepoCardLink>
				)
			}
			<RepoCardLink as="a" href={sourceUrl} icon="github">Source code</RepoCardLink>
			<CopyButton {createAstroTemplate} />
		</p>
		<hr class="border-astro-gray-100/10" />
		<ProjectLauncher {...{ idxUrl, stackblitzUrl, codesandboxUrl, gitpodUrl }} />
	</div>
</article>
