---
import Icon from 'astro-icon';
import houstonHappy from '../assets/houston_happy.webp';
import seoBanner from '../assets/seo-banner.webp';
import GridGradientsAndNoise from '../components/GridGradientsAndNoise.astro';
import Head from '../components/Head.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import RepoCard from '../components/RepoCard.astro';
import ResourceCard from '../components/ResourceCard.astro';
import type { ExampleGroup } from '../data/examples.js';
import { joinPath } from '../utils/path.js';

export type Props = {
	examples: Map<string, ExampleGroup>;
	currentExample?: string | undefined;
	basePath: string;
};

const currentExample = Astro.props.currentExample || 'getting-started';
const exampleGroup = Astro.props.examples.get(currentExample);
if (!exampleGroup) {
	throw new Error(`No examples found for "${currentExample}"`);
}

const pathname = Astro.url.pathname.replace(/\/$/, '');

const resolvedSeoBanner = new URL(seoBanner.src, Astro.site).toString();
---

<html lang="en" class="overflow-x-hidden bg-astro-gray-700 text-astro-gray-100">
	<head>
		<Head
			title={exampleGroup.title}
			description="Quickly launch example Astro projects in your favorite browser IDE!"
			image={{ src: resolvedSeoBanner, alt: '' }}
			canonicalURL={new URL(pathname, `https://astro.new`)}
		/>
	</head>

	<body>
		<a
			href="#main-heading"
			class="sr-only left-2 top-2 z-50 inline-flex justify-center rounded-full border border-astro-gray-100/20 bg-astro-gray-700 font-semibold text-white focus:not-sr-only focus:absolute focus:w-fit focus:px-4 focus:py-2"
		>
			Skip to content
		</a>
		<Header />

		<div class="noise-container overflow-x-hidden supports-[overflow-x:clip]:overflow-x-clip">
			<GridGradientsAndNoise />

			<div class="container">
				<Hero />
			</div>

			<main class="container" aria-labelledby="main-heading">
				<nav class="flex overflow-auto whitespace-nowrap border-b border-astro-gray-100/20">
					{
						[...Astro.props.examples.values()].map((group) => (
							<a
								href={joinPath(Astro.props.basePath, group.slug)}
								aria-current={group.slug === currentExample ? 'page' : undefined}
								data-astro-prefetch
								class="inline-block rounded-t-lg from-astro-blue/50 to-emerald-300/50 px-4 py-2 text-sm transition hover:backdrop-brightness-50 aria-[current]:bg-gradient-to-tr"
							>
								{group.title}
							</a>
						))
					}
				</nav>

				<h1 id="main-heading" class="sr-only">{exampleGroup.title}</h1>

				<ul class="mb-24 mt-8 grid gap-4 sm:grid-cols-2 lg:grid-cols-3 lg:gap-6">
					{
						exampleGroup.items.map((example, index) => (
							<li>
								<RepoCard aboveTheFold={index < 3} {...example} />
							</li>
						))
					}
				</ul>

				<section class="flex flex-col items-center">
					<img src={houstonHappy.src} alt="" width="148" height="148" loading="lazy" />
					<h2 class="heading-3 text-center sm:heading-2">Houston, we have resources</h2>
					<div class="my-16 flex w-full flex-wrap gap-4 children:flex-1 children:basis-72">
						<div>
							<ResourceCard
								title="Learn more\nin our docs"
								description="Thanks to our wonderful contributors, our docs are the best place to learn, troubleshoot, and explore Astro."
								link={{
									text: 'Start learning',
									href: 'https://docs.astro.build',
								}}
								iconBg="red-pink"
							>
								<Icon
									slot="icon"
									name="pages"
									size={120}
									class="@sm:mr-4 @sm:mt-4"
									aria-hidden="true"
								/>
							</ResourceCard>
						</div>

						<div>
							<ResourceCard
								title="Get started\nwith themes"
								description="Explore our official and community themes to get started on your next project. Portfolios, docs, blogs, marketing sites, and more."
								link={{
									text: 'Find a theme',
									href: 'https://astro.build/themes',
								}}
								iconBg="blue-green"
							>
								<Icon
									slot="icon"
									name="pulse"
									size={100}
									class="@sm:mr-4 @sm:mt-4"
									aria-hidden="true"
								/>
							</ResourceCard>
						</div>

						<div>
							<ResourceCard
								title="Join our\ncommunity"
								description="Get support, get involved, and join our community of 5000+ developersâ€”it all happens on Discord."
								link={{
									text: 'Join our Discord',
									href: 'https://astro.build/chat',
								}}
								iconBg="blue-purple"
							>
								<Icon
									slot="icon"
									name="community-circle"
									width={190}
									height={176}
									class="@sm:-mr-8 @sm:-mt-12"
									aria-hidden="true"
								/>
							</ResourceCard>
						</div>
					</div>
				</section>
			</main>
		</div>

		<footer
			class="container flex flex-col items-center gap-x-8 gap-y-2 border-t border-astro-gray-100/20 p-8 sm:flex-row sm:px-12"
		>
			<a href="https://astro.build/privacy" class="link text-astro-gray-200"> Privacy Policy</a>
			<a href="https://astro.build/terms" class="link text-astro-gray-200"> Terms and Conditions</a>
			<address class="not-italic text-astro-gray-200 sm:ml-auto">
				MIT License &copy; {new Date().getFullYear()} Astro Contributors
			</address>
		</footer>

		<style>
			.container {
				@apply mx-auto max-w-screen-xl px-4 md:px-8;
			}
			.bg-radial-gradient {
				background-image: radial-gradient(closest-side, var(--tw-gradient-stops));
			}

			@media (forced-colors: active) {
				a[aria-current='page'] {
					background-color: Highlight;
				}
			}
		</style>

		<style is:global>
			:focus {
				outline: none;
			}
			:focus-visible {
				@apply ring-2 ring-astro-purple;
			}
		</style>

		<script>
			// find all internal links, this will pickup all redirects handled by the redirect function
			document.querySelectorAll<HTMLAnchorElement>("a[href^='/']").forEach((link) => {
				link.addEventListener('click', () => {
					window.fathom.trackPageview({
						url: link.href,
					});
				});
			});

			declare global {
				// eslint-disable-next-line @typescript-eslint/consistent-type-definitions
				interface Window {
					fathom: {
						trackPageview: (options: { url: string }) => void;
					};
				}
			}
		</script>
	</body>
</html>
